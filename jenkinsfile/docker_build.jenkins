#!grooby
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage ("Docker Login") {
            steps {
                echo "=========== Docker Login ==========="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_claykiv', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                sh """
                docker login -u $USERNAME -p $PASSWORD
                """
                }
            }
        }
        stage ("Create Docker Image") {
            steps {
                echo "+=========== Start Building Image ===========+"
                dir ('docker') {
                    sh '''
                    sed -i "s/BUILD_NUMBER/1.0.$BUILD_NUMBER/g" index.html
                    docker build -t claykiv/simple-website:1.0.$BUILD_NUMBER .
                    '''
                }
            }
        }
        stage ("RUN Docker Image") {
            steps {
                echo "+=========== Start Building Image ===========+"
                dir ('docker') {
                    sh '''
                    docker stop simple-website &> /dev/null
                    sleep 7
                    docker run --rm -d -p 80:80 --name simple-website claykiv/simple-website:1.0.$BUILD_NUMBER
                    '''
                }
            }
        }
        stage ("Docker PUSH") {
            steps {
                echo "=========== Start Building Image ==========="
                sh '''
                docker push claykiv/simple-website:1.0.$BUILD_NUMBER
                '''
            }
        }
        stage ("Docker PULL 110 VPS") {
            steps {
                echo "=========== Start Building Image ==========="
                sh '''
                ssh root@93.119.104.110 "docker pull claykiv/simple-website:1.0.$BUILD_NUMBER"
                '''
            }
        }
    }
}