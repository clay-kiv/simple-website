#!grooby
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    environment {
        // SSH user and IP
        SSH_IP = "93.119.104.110"
        SSH_USR = "root"
        
        //DOCKER IMAGE TAG
        DOCKER_IMAGE_TAG = "claykiv/simple-website:1.0.${BUILD_NUMBER}"
    }
    stages {
        stage ("Docker Login") {
            steps {
                echo "=========== Docker Login ==========="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_claykiv', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                sh """
                docker login -u $USERNAME -p $PASSWORD
                """
                }
            }
        }
        stage ("Create Docker Image") {
            steps {
                echo "+=========== Start Building Image ===========+"
                dir ('docker') {
                    sh """
                    sed -i "s/BUILD_NUMBER/1.0.$BUILD_NUMBER/g" index.html
                    docker build -t $DOCKER_IMAGE_TAG .
                    """
                }
            }
        }
        stage("RUN Docker Image") {
            steps {
                echo "+=========== RUN Docker Image ===========+"
                dir('docker') {
                    // Stop existent container (if exist) and wait to stop.
                    sh 'docker stop simple-website || true'
                    sh 'docker wait simple-website || true'

                    // Restart container
                    sh "docker run --rm -d -p 80:80 --name simple-website $DOCKER_IMAGE_TAG"
                }
            }
        }
        stage ("Docker PUSH") {
            steps {
                echo "=========== Start Building Image ==========="
                sh """
                docker push $DOCKER_IMAGE_TAG
                """
            }
        }
        stage ("Docker PULL 110 VPS") {
            steps {
                echo "=========== Docker PULL 110 VPS ==========="
                sh """
                ssh $SSH_USR@$SSH_IP "docker pull $DOCKER_IMAGE_TAG"
                ssh $SSH_USR@$SSH_IP "docker stop simple-website || true && docker wait simple-website || true"
                ssh $SSH_USR@$SSH_IP "docker run --rm -d -p 80:80 --name simple-website $DOCKER_IMAGE_TAG"
                """
                
                // Waiting 30 seconds for check container if runing.
                sleep 30
        
                // Check if container runing on vps 110 VPS
                containerRunning = sh(script: "ssh ${SSH_USR}@${SSH_IP} 'docker ps | grep -q simple-website'", returnStatus: true)
                
                if (containerRunning != 0) {
                    error("Container is not running. Build failed.")
                }
            }
        }
    }
}